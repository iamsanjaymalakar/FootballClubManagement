CREATE OR REPLACE function wol (res in VARCHAR2)
return varchar2 is
begin
if SUBSTR(res,1,1)>SUBSTR(res,3,1) then
return 'WIN';
ELSIF SUBSTR(res,1,1)=SUBSTR(res,3,1) then
return 'DRAW';
ELSE
return 'LOSS';
END IF;
end;

-----------------

create or replace FUNCTION stillPresident (bid in NUMBER)
RETURN VARCHAR IS
    CID NUMBER;
    SDATE DATE;
    EDATE DATE;
BEGIN
    BEGIN

        SELECT COMMITTEE_ID INTO CID
        FROM COMMITTEE_BOARD
        WHERE BMEMBER_ID=bid AND ROLE='PRESIDENT';
    END;
    SELECT START_DATE, END_DATE INTO SDATE, EDATE
    FROM COMMITTEES
    WHERE COMMITTEE_ID=CID;
    IF SYSDATE>= SDATE AND SYSDATE<=EDATE THEN

    RETURN 'YES';
    ELSE
    RETURN 'NO';
    END IF;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
    RETURN 'ERROR';
    WHEN OTHERS THEN
    RETURN 'Some unknown error occurred.' ;
END;

---------------

create or replace FUNCTION showManager (tid in NUMBER)
RETURN VARCHAR2 IS
    NAME VARCHAR2(255);
BEGIN

    SELECT S.STAFF_NAME INTO NAME
    FROM STAFFS S JOIN MANAGERS M
    ON S.STAFF_ID=M.STAFF_ID
    WHERE M.TEAM_ID=tid;
    RETURN NAME;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
    RETURN 'ERROR';
    WHEN OTHERS THEN
    RETURN 'Some unknown error occurred.' ;
END;

--------------

create or replace FUNCTION showMedic (tid in NUMBER)
RETURN VARCHAR2 IS
    NAME VARCHAR2(255);
    MTID NUMBER;
    CHID NUMBER;
BEGIN
    SELECT MTEAM_ID INTO MTID
    FROM MEDICAL_TEAMS_TEAMS
    WHERE TEAM_ID=tid;
    SELECT CHIEF_ID INTO CHID
    FROM MEDICAL_TEAMS
    WHERE MTEAM_ID=MTID;
    SELECT S.STAFF_NAME INTO NAME
    FROM STAFFS S JOIN MEDICALS M
    ON S.STAFF_ID=M.STAFF_ID
    WHERE M.MEDIC_ID=CHID;
    RETURN NAME;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
    RETURN 'ERROR';
    WHEN OTHERS THEN
    RETURN 'Some unknown error occurred.' ;
END;

-----------------

create or replace FUNCTION showScout (tid in NUMBER)
RETURN VARCHAR2 IS
    NAME VARCHAR2(255);
BEGIN

    SELECT S.STAFF_NAME INTO NAME
    FROM STAFFS S JOIN SCOUTS SC
    ON S.STAFF_ID=SC.STAFF_ID
    WHERE SC.TEAM_ID=tid;
    RETURN NAME;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
    RETURN 'ERROR';
    WHEN OTHERS THEN
    RETURN 'Some unknown error occurred.' ;
END;

------------------------



create or replace TRIGGER Player_Update
BEFORE UPDATE
OF PLAYER_NAME,AGENT_NAME
ON PLAYERS
FOR EACH ROW
DECLARE
BEGIN
:NEW.PLAYER_NAME := INITCAP(:NEW.PLAYER_NAME) ;
:NEW.AGENT_NAME := INITCAP(:NEW.AGENT_NAME) ;
END ;

--------------

create or replace TRIGGER salaryUpdatePlayers
BEFORE UPDATE
ON PLAYERS
FOR EACH ROW
DECLARE
    PL_NAME VARCHAR2(25);
    PL_TYPE VARCHAR2(25);
    PREV_SALARY NUMBER;
    REQ_SALARY NUMBER;
    REQ_DATE DATE;

BEGIN

    PL_NAME := :OLD.PLAYER_NAME;
    PL_TYPE := 'Player';
    PREV_SALARY := :OLD.WAGE;
    REQ_SALARY := :NEW.WAGE;
    INSERT INTO SALARY_UPDATE VALUES (PL_NAME,PL_TYPE,PREV_SALARY,REQ_SALARY,SYSDATE);
    :NEW.WAGE := :OLD.WAGE;
END ;